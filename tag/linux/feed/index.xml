<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Linux &#8211; Dr. Jian Chen</title>
	<atom:link href="http://localhost/jianchen/tag/linux/feed/" rel="self" type="application/rss+xml" />
	<link>https://www.jianchen.info</link>
	<description>陈建博士</description>
	<lastBuildDate>Tue, 28 Jun 2022 23:56:40 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.0</generator>

<image>
	<url>https://www.jianchen.info/wp-content/uploads/2022/06/cropped-Frued_Cartoon-32x32.png</url>
	<title>Linux &#8211; Dr. Jian Chen</title>
	<link>https://www.jianchen.info</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Tips to get USB keyboard index in Matlab while using KbQueueCheck</title>
		<link>https://www.jianchen.info/2016/11/22/tips-to-get-usb-keyboard-index-in-matlab-while-using-kbqueuecheck/</link>
		
		<dc:creator><![CDATA[saturn]]></dc:creator>
		<pubDate>Tue, 22 Nov 2016 23:55:58 +0000</pubDate>
				<category><![CDATA[research]]></category>
		<category><![CDATA[keyboard]]></category>
		<category><![CDATA[Linux]]></category>
		<guid isPermaLink="false">https://www.jianchen.info/?p=105</guid>

					<description><![CDATA[A keyboard index is necessary when using KbQueueCheck instead of KbCheck. So how to get a valid keyboard index of your desired USB keyboard? Credit: Jacob M. Paul in our lab. [Linux enviroment] 1. Check if the keyboard was recognized by the system. Steps: Plug in your USB keyboard -&#62; Open Terminal -&#62; Input “lsusb“ ... <a title="Tips to get USB keyboard index in Matlab while using KbQueueCheck" class="read-more" href="https://www.jianchen.info/2016/11/22/tips-to-get-usb-keyboard-index-in-matlab-while-using-kbqueuecheck/" aria-label="More on Tips to get USB keyboard index in Matlab while using KbQueueCheck">Read more</a>]]></description>
										<content:encoded><![CDATA[
<p>A keyboard index is necessary when using KbQueueCheck instead of KbCheck. So how to get a valid keyboard index of your desired USB keyboard?</p>



<p>Credit: Jacob M. Paul in our lab.</p>



<p>[Linux enviroment]</p>



<p><strong>1. Check if the keyboard was recognized by the system.</strong></p>



<p><em>Steps: Plug in your USB keyboard -&gt; Open Terminal -&gt; Input “</em>lsusb<em>“ -&gt; Plug off the USB keyboard -&gt; Input “</em>lsusb<em>“ again in Terminal</em></p>



<p>Check if there were changes in the list. Here we can recognize a change of “Itron Technology tOne”, which is our USB keyboard. This means that the keyboard can be recognized by the system.</p>



<figure class="wp-block-image"><img src="https://jianch.github.io/wp-content/uploads/2021/02/systemUSBlist-1024x576.png" alt="" class="wp-image-82"/></figure>



<figure class="wp-block-image"><img src="https://jianch.github.io/wp-content/uploads/2021/02/systemUSBlistWithoutNumberPad-1024x576.png" alt="" class="wp-image-83"/></figure>



<p><strong>2 Get index in MATLAB</strong></p>



<p><em>Steps: Plug off the USB keyboard -&gt; Open MATLAB -&gt; Input “[id names info] = GetKeyboardIndeces()”</em></p>



<p>MATLAB will give out some ids etc… Note that there are only 3, 4, 5 and 7 for now.</p>



<figure class="wp-block-image"><img src="https://jianch.github.io/wp-content/uploads/2021/02/systemUSBlistWithoutNumberPad-2-1024x576.png" alt="" class="wp-image-84"/></figure>



<p><em>Steps: Plug in the USB keyboard -&gt; Reopen MATLAB (important) -&gt; Input “[id names info] = GetKeyboardIndeces() again”</em></p>



<p>Note that there are extra id: 8, 9, and 10.</p>



<figure class="wp-block-image"><img src="https://jianch.github.io/wp-content/uploads/2021/02/matlabUSBlist-1024x576.png" alt="" class="wp-image-85"/></figure>



<figure class="wp-block-image"><img src="https://jianch.github.io/wp-content/uploads/2021/02/matlabUSBlist_3-1024x576.png" alt="" class="wp-image-86"/></figure>



<p><strong>3 Try these three indices in KbQueueCheck.</strong></p>



<p>Here, the keyboard index for our USB keyboard is 10.</p>



<figure class="wp-block-image"><img src="https://jianch.github.io/wp-content/uploads/2021/02/matlab_code-1024x576.png" alt="" class="wp-image-87"/></figure>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Install Biosemi Actiview on 64-bit Linux (Ubuntu)</title>
		<link>https://www.jianchen.info/2015/12/29/install-biosemi-actiview-on-64-bit-linux-ubuntu/</link>
		
		<dc:creator><![CDATA[saturn]]></dc:creator>
		<pubDate>Tue, 29 Dec 2015 23:38:46 +0000</pubDate>
				<category><![CDATA[research]]></category>
		<category><![CDATA[Actiview]]></category>
		<category><![CDATA[Biosemi]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[Ubuntu]]></category>
		<guid isPermaLink="false">https://www.jianchen.info/?p=93</guid>

					<description><![CDATA[Biosemi developed their Linux recording software (Actiview) based on Labview 8.5 (32-bit). Actiview, therefore, has to run in a LabVIEW run-time engine (8.5) environment. It seems that they didn’t update this after release. A big problem is, who still use a 32-bit system? My lab currently builds a series of experimental equipment based on Ubuntu ... <a title="Install Biosemi Actiview on 64-bit Linux (Ubuntu)" class="read-more" href="https://www.jianchen.info/2015/12/29/install-biosemi-actiview-on-64-bit-linux-ubuntu/" aria-label="More on Install Biosemi Actiview on 64-bit Linux (Ubuntu)">Read more</a>]]></description>
										<content:encoded><![CDATA[
<figure class="wp-block-image"><img src="https://jianch.github.io/wp-content/uploads/2021/02/actiview-1024x575.png" alt="" class="wp-image-61"/></figure>



<p>Biosemi developed their Linux recording software (Actiview) based on Labview 8.5 (32-bit). Actiview, therefore, has to run in a LabVIEW run-time engine (8.5) environment. It seems that they didn’t update this after release.</p>



<p>A big problem is, who still use a 32-bit system?</p>



<p>My lab currently builds a series of experimental equipment based on Ubuntu 14.04 LTS (which is 64-bit Linux). I got a lot of problems when we decided to run Biosemi Actiview on Ubuntu.</p>



<p>Here is the solution for sharing.</p>



<p>1, Firstly, you need to install Alien. Open a command window, input:</p>



<pre class="wp-block-code"><code>sudo apt-get install alien fakeroot</code></pre>



<p><em>Reference: INSTALL 32BIT SOFTWARE ON 64BIT UBUNTU.&nbsp;<a rel="noreferrer noopener" href="http://psgplacement.blogspot.com.au/2013/09/installing-i386-32-bit-rpm-files-in-amd.html" target="_blank">http://psgplacement.blogspot.com.au/2013/09/installing-i386-32-bit-rpm-files-in-amd.html</a></em></p>



<p>2, Run following on command to install the 32-bit compatibility libraries</p>



<pre class="wp-block-code"><code>sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0</code></pre>



<p>3, Then we need to convert the rpm to tgz (tar.gz) format.<br><em>Straightforward conversion from rpm to deb format can cause issues if the package was meant for i386 and you are trying to install in amd64 bit. It will say architecture is incompatible like “&lt;filename.rpm&gt; is for architecture i386 ; the package cannot be built on this system”. This is because the package is built for i386 but we are trying to install in amd 64 bit. To overcome this, we need to first perform the conversion from rpm to tgz.</em></p>



<pre class="wp-block-code"><code>sudo alien --to-tgz labview85-rte-8.5-1.i386.rpm
sudo alien --to-tgz labview-rte-aal-1.1-1.i386.rpm</code></pre>



<p>4, The above step gives us tgz file. This can be then converted to deb format by using alien command again.</p>



<pre class="wp-block-code"><code>sudo alien --to-deb labview85-rte-8.5.tgz
sudo alien --to-deb labview-rte-aal-1.1.tgz</code></pre>



<p>5, Then the usual procedure to install deb can be used</p>



<pre class="wp-block-code"><code>sudo dpkg -i *.deb</code></pre>



<p>6, Then add to the lib</p>



<pre class="wp-block-code"><code>export LD_LIBRARY_PATH=/usr/local/lib/LABVIEW-8.5</code></pre>



<p>7, Then run the Actiview in the hosting folder</p>



<pre class="wp-block-code"><code>./Actiview707-Linux</code></pre>



<p>Tips:</p>



<p>To run the program, probably you need to follow the following steps:</p>



<p>1, enter into sudo su mode</p>



<p>2, locate to the Actiview folder,</p>



<p>3, add the library,</p>



<p>4, run the program,</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
